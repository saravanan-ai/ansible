---
- name: Check Swarm Status
  hosts: all
  become: true
  gather_facts: false
  remote_user: ubuntu
  tasks:
    - name: Find Current Status
      ansible.builtin.shell: 
        cmd: >
          docker info | grep "Swarm: active"
      register: swarm_status
      ignore_errors: true

    - name: Force Leave Swarm if already joined
      command: docker swarm leave --force
      when: swarm_status.rc == 0


- name: Init Swarm Master
  hosts: masters
  become: true
  gather_facts: false
  remote_user: ubuntu
  tasks:
    - name: Swarm Init
      command: sudo usermod -aG docker {{ remote_user }}
      command: docker swarm init --advertise-addr {{ inventory_hostname }}

    - name: Get Worker Token
      command: docker swarm join-token worker -q
      register: worker_token

    - name: Show Worker Token
      debug: var=worker_token.stdout

    - name: Master Token
      command: docker swarm join-token manager -q
      register: master_token

    - name: Show Master Token
      debug: var=master_token.stdout

- name: Restart Docker Service
  hosts: workers
  become: true
  tasks:
    - name: Restart Docker Service
      systemd:
        name: docker
        state: restarted

- name: Join Swarm Cluster
  hosts: workers
  become: true
  remote_user: ubuntu
  gather_facts: false
  vars:
    token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
    master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
  tasks:
    - name: Reload systemd daemons
      ansible.builtin.systemd:
         daemon_reload: true
         name: docker
         state: restarted

    - name: Join Swarm Cluster as a Worker
      command: sudo usermod -aG docker {{ remote_user }}
      command: sudo docker swarm join --token {{ token }} {{ master }}:2377
      register: worker

    - name: Show Results
      debug: var=worker.stdout

    - name: Show Errors
      debug: var=worker.stderr
